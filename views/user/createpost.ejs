<!DOCTYPE html>
<html lang="en">

<head>
    <title>Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        @font-face {
            font-family: "Inter";
            src: url("/fonts/Inter-Regular.ttf");
        }

        body {
            font-family: "Inter";
            background-color: #0f172a;
            color: white;
        }

        .card {
            background: #1e293b;
            border: none;
            border-radius: 15px;
        }

        .nav-link.active {
            background: #6366f1 !important;
        }

        .dashboard-container {
            margin: 40px auto;
            background-color: #171C26FF;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
        }

        h2 {
            font-weight: 600;
            font-size: 1.8rem;
            margin-bottom: 25px;
        }

        .upload-box {
            border: 2px dashed #4a5568;
            border-radius: 10px;
            text-align: center;
            padding: 40px;

            margin-bottom: 25px;
        }

        .upload-box:hover {
            border-color: #00bfa6;
        }

        .upload-box p {
            color: #a0aec0;
            margin-top: 10px;
        }

        .btn-upload {
            background-color: #00bfa6;
            color: #fff;
            border: none;
            margin-top: 10px;
            padding: 6px 20px;
            border-radius: 6px;
        }

        .form-control,
        .form-select {
            background-color: #1A1C1EFF;
            border: 1px solid #2d3748;
            color: #fff;
        }

        .form-control::placeholder,
        .form-select::placeholder {

            color: #bcc1ca;
        }

        .form-control:focus,
        .form-select:focus {
            border-color: #00bfa6;
            box-shadow: none;
            background-color: #1A1C1EFF;
            color: #fff;
        }

        textarea {
            resize: none;
        }

        .btn-post {
            background-color: #22CCB2;
            color: #fff;
            border: none;
            width: 100%;
            padding: 10px;
            /* font-weight: 600; */
            border-radius: 6px;
        }

        .btn-post:hover {
            background-color: #5c6e6c;
        }

        .custom-table-wrapper {
            background-color: #171c26;
            color: #bdc1ca;
            border-radius: 19px;
            overflow: hidden;
            font-size: 14px;
        }

        .custom-table {
            background: transparent !important;
            margin-bottom: 0;
            border-collapse: separate;
            border-spacing: 0;
        }

        .custom-table thead th {
            color: #bdc1ca;
            background: #262a33;
            border-bottom: 1px solid #2f343d;
            font-weight: 600;
            padding: 16px 18px;
        }

        .custom-table tfoot td {
            color: #bdc1ca;
            background: #1e293b;
            border-bottom: 1px solid #2f343d;
            font-weight: 500;
        }

        .custom-table tbody tr {
            background: transparent;
            border-bottom: 1px solid #2f343d;
        }

        .custom-table tbody tr:last-child {
            border-bottom: none;
        }

        .custom-table tbody td {
            color: #f3f4f6;

            background: transparent !important;
            vertical-align: middle;
            padding: 16px 18px;
        }

        .custom-table tbody tr:hover td {
            background: rgba(255, 255, 255, 0.02);
        }

        .status-completed {
            background: #16a34a;
            color: #fff;
            font-size: 12px;
            padding: 3px 10px;
            border-radius: 12px;
        }

        .status-pending {
            background: #d97706;
            color: #fff;
            font-size: 12px;
            padding: 3px 10px;
            border-radius: 12px;
        }

        .status-active {
            background: #1DD75B30;
            color: #1dd75b;
            font-size: 12px;
            padding: 3px 10px;
            border-radius: 12px;
        }

        .icon-box {
            width: 20px;
            height: 36px;
        }

        .input-box {
            background-color: #0f172a;
            width: 100%;
            height: 40px;
            padding-left: 12px;
            padding-right: 12px;
            font-family: 'Inter';
            font-size: 14px;
            line-height: 22px;
            font-weight: 400;
            border-radius: 10px;
            border-width: 1px;
            border-color: rgb(59, 59, 59);
            border-style: solid;
            outline: none;
            color: #BDC1CA;
        }

        .page-link {
            background-color: #1e293b !important;
            color: #fff !important;
            border: none !important;
        }

        .page-item.active .page-link {
            background-color: #6366f1 !important;
        }
        select#rowsPerPage {
            appearance: none;          /* Chrome, Safari, Edge */
            -moz-appearance: none;     /* Firefox */
            -webkit-appearance: none;  /* Safari */
            background-image: none;    /* remove default arrow */
            padding-right: 10px;       /* adjust spacing */
            text-align: center;        /* keep number centered */
            }

            /* Optional — make it look clean and flat */
            select#rowsPerPage {
            background-color: #0f172a;  /* match dark theme */
            border: 1px solid #2d3748;
            color: #fff;
            border-radius: 5px;
            font-size: 14px;
            height: 30px;
            }
    </style>
</head>

<body>

    <%- include('../partials/header') %>

        <div class="d-flex">

            <%- include('../partials/sidebar') %>



                <div class="flex-grow-1 p-4">
                    <%- include('../partials/tosta') %>
                        <div class="d-flex justify-content-between">
                            <h3 class="fw-bold mb-4">Dashboard Overview</h3>
                            <button onclick="window.location.href='/user/postapproval'"
                                class="btn btn-primary rounded-3" style="font-size: 14px; height: 44px;"><i
                                    class="bi bi-receipt text-white me-1"></i>Responce</button>
                        </div>


                        <div class="dashboard-container">
                            <!-- Upload Image Section -->
                            <!-- Task Form -->
                            <!-- Task Form -->
                            <form id="taskForm" method="POST" enctype="multipart/form-data">

                                <div class="upload-box" id="dropZone">
                                    <i id="icon" class="bi bi-cloud-upload fs-1 text-secondary"></i>
                                    <p id="info">Drag and drop files here, or click to browse</p>

                                    <label id="label" class="btn-upload">
                                        <input type="file" name="task_photo" id="taskPhotoInput" accept="image/*" hidden
                                            required>
                                        Upload Task Image
                                    </label>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Task Title</label>
                                        <input name="title" type="text" class="form-control"
                                            placeholder="Enter Task Title..." required />
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Location</label>
                                        <input name="location" type="text" class="form-control"
                                            placeholder="Enter Location..." required />
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Brief Description</label>
                                    <textarea name="description" class="form-control" rows="4"
                                        placeholder="Describe your task details"></textarea>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-4">
                                        <label class="form-label">Duration</label>
                                        <input name="duration" class="form-control">
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label">Deadline</label>
                                        <input name="deadline" type="datetime-local" class="form-control" />
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label">Budget Offered</label>
                                        <input name="amount" type="number" class="form-control" placeholder="₹ 0" />
                                    </div>
                                </div>

                                <button type="submit" id="postBtn" class="btn-post" aria-busy="false"
                                    style="min-width: 140px;">
                                    <span class="spinner-border spinner-border-sm me-2 d-none" role="status"
                                        aria-hidden="true"></span>
                                    <span class="btn-label">Post Task</span>
                                </button>
                            </form>

                        </div>

                        <h5 class=" fw-bold mb-3">My Posts</h5>
                        <div class="table-responsive custom-table-wrapper">
                            <table id="table" class="table table-borderless align-middle custom-table">
                                <thead>
                                    <tr>
                                        <th>Task ID</th>
                                        <th>Title</th>
                                        <th>Budget</th>
                                        <th class="text-center">Date</th>
                                        <th class="text-center">Dadline</th>
                                        <th class="text-center">Status</th>
                                        <th class="text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="tbody">
                                    <% tasks.forEach(task=> { %>
                                        <tr>
                                            <td>#<%= task._id.toString().slice(0, 6) %>...</td>
                                            <td><strong>
                                                    <%= task.title %>
                                                </strong></td>
                                            <td class="text-danger">+₹<%= task.amount %>
                                            </td>
                                            <td class="text-center">
                                                <%= task.created_at ? new
                                                    Date(task.created_at).toLocaleDateString('en-US', { month: 'short' ,
                                                    day: 'numeric' , year: 'numeric' }) : "N/A" %>
                                            </td>
                                            <td class="text-center">
                                                <%= task.deadline ? new Date(task.deadline).toLocaleDateString('en-US',
                                                    { month: 'short' , day: 'numeric' , year: 'numeric' }) : "N/A" %>
                                            </td>
                                            <td class="text-center"><span class="status-active">
                                                    <%= task.status %>
                                                </span></td>
                                            <td class="d-flex justify-content-between align-items-center">
                                                <button type="button" data-id="<%= task._id %>" data-bs-toggle="modal"
                                                    data-bs-target="#editdata"
                                                    class="text-info me-2 bg-transparent border-0">
                                                    <img class="icon-box"
                                                        src="https://res.cloudinary.com/dqugwh4su/image/upload/v1761538423/edit_yaubxq.svg"
                                                        alt="">
                                                </button>


                                                <button class="text-danger bg-transparent border-0 delete-btn"
                                                    data-id="<%= task._id %>">
                                                    <img class="icon-box"
                                                        src="https://res.cloudinary.com/dqugwh4su/image/upload/v1761538422/delete_nttln1.svg"
                                                        alt="">
                                                </button>
                                            </td>
                                        </tr>
                                        <% }) %>

                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="100%">
                                            <div
                                                class="d-flex justify-content-between align-items-center px-3 py-2 flex-wrap gap-2">

                                                <!-- Left: items per page -->
                                                <div class="d-flex align-items-center">
                                                    <span class="me-2 text-white-50">Show</span>
                                                    <select id="rowsPerPage" class="form-select form-select-sm bg-dark text-white border-secondary" style="width: 30px;">
                                                        <option value="5">5</option>
                                                        <option value="7" selected>7</option>
                                                        <option value="10">10</option>
                                                        <option value="20">20</option>
                                                    </select>
                                                    <span class="ms-2 text-white-50">items per page</span>
                                                </div>

                                                <!-- Center: showing range -->
                                                <div id="showingInfo" class="text-white-50 text-center flex-grow-1">
                                                    Showing 1 to 7 of 7 results
                                                </div>

                                                <!-- Right: pagination -->
                                                <div>
                                                    <ul id="pagination" class="pagination pagination-sm mb-0"></ul>
                                                </div>

                                            </div>
                                        </td>
                                    </tr>
                                </tfoot>

                            </table>
                        </div>


                </div>


                <div class="modal fade" id="editdata" tabindex="-1" aria-labelledby="exampleModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content" style="background-color: #0f172a;">
                            <div class="modal-header bg-primary border-bottom-0">
                                <h1 class="modal-title fs-5" id="exampleModalLabel">Edit Post</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <label class="mb-2" style="font-size: 14px;" for="">Service</label><br>
                                <input id="service" class="input-box" type="text" placeholder="Serice title">
                                <label class="mb-2 mt-3" style="font-size: 14px;" for="">Duration</label><br>
                                <input id="duration" class="input-box" type="text" placeholder="Duration">
                                <label class="mb-2 mt-3" style="font-size: 14px;" for="">Deadline</label><br>
                                <input id="deadline" class="input-box" type="datetime-local" placeholder="Deadline">
                                <label class="mb-2 mt-3" style="font-size: 14px;" for="">Amount</label><br>
                                <input id="amount" class="input-box" type="text" placeholder="Amount">
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary ou">Save changes</button>
                            </div>
                        </div>
                    </div>
                </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            const form = document.getElementById("taskForm");
            const postBtn = document.getElementById("postBtn");
            const postSpinner = postBtn.querySelector(".spinner-border");
            const postLabel = postBtn.querySelector(".btn-label");

            function setPosting(state) {
                postBtn.disabled = state; // prevent double submits
                postBtn.setAttribute("aria-busy", state ? "true" : "false"); // a11y busy state
                postSpinner.classList.toggle("d-none", !state); // show/hide spinner
                postLabel.textContent = state ? "Posting..." : "Post Task"; // update label
            }

            form.addEventListener("submit", async (e) => {
                e.preventDefault();
                setPosting(true);

                const formData = new FormData(e.target);

                try {
                    const response = await fetch("/user/createtask", {
                        method: "POST",
                        body: formData
                    });

                    const result = await response.json();

                    if (response.ok) {
                        showToast('success', 'Service Created Successfully!', 'Your job application has been successfully submitted.');
                        e.target.reset();
                        // keep loading until the page reloads
                        location.reload();
                    } else {
                        showToast('warning', 'Failed to create Service', 'There was an error submitting your application. Please try again.');
                        setPosting(false);
                    }
                } catch (error) {
                    showToast('error', 'Server Error!', error);
                    setPosting(false);
                }
            });





            // ✅ FIXED EDIT MODAL LOGIC
            document.getElementById("tbody").addEventListener("click", (e) => {
                const editBtn = e.target.closest("button[data-bs-toggle='modal']");
                if (!editBtn) return;

                const row = editBtn.closest("tr");
                const taskId = row.querySelector(".delete-btn").dataset.id;
                const title = row.children[1].innerText.trim();
                const amount = row.children[2].innerText.replace("+₹", "").trim();
                const deadline = row.children[4]?.innerText.trim() || "";
                const duration = row.children[3].innerText.trim();; // if not displayed in table, leave empty

                const modal = document.getElementById("editdata");
                modal.dataset.id = taskId;
                modal.querySelector("#service").value = title;
                modal.querySelector("#duration").value = duration;
                modal.querySelector("#amount").value = amount;
                modal.querySelector("#deadline").value = convertToDateInput(deadline);
            });

            // Helper Function
            function convertToDateInput(dateStr) {
                if (!dateStr) return "";
                const d = new Date(dateStr);
                return d.toISOString().slice(0, 16); // format for input type="datetime-local"
            }

            // ✅ SAVE EDIT
            document.querySelector("#editdata .btn-primary").addEventListener("click", async () => {
                const modal = document.getElementById("editdata");
                const taskId = modal.dataset.id;
                const title = modal.querySelector("#service").value;
                const amount = modal.querySelector("#amount").value;
                const duration = modal.querySelector("#duration").value;
                const deadline = modal.querySelector("#deadline").value;

                try {
                    const res = await fetch(`/user/updatetask/${taskId}`, {
                        method: "PUT",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ title, amount, duration, deadline }),
                    });

                    const result = await res.json();
                    if (res.ok) {
                        showToast('success', 'Service Updated Successfully!', 'Your job application has been Updated successfully.')
                        bootstrap.Modal.getInstance(modal).hide();
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showToast('error', 'Failed to update Service', 'There was an error submitting your application. Please try again.')
                    }
                } catch (err) {
                    console.error("Error updating task:", err);
                    showToast('error', 'Server Error!', 'Try again later.');
                }
            });

            // ✅ DELETE FIX
            document.querySelectorAll('.delete-btn').forEach(btn => {
                btn.addEventListener('click', async function () {
                    const id = this.dataset.id;
                    if (confirm("Are you sure you want to delete?")) {
                        const response = await fetch(`/user/deletetask/${id}`, { method: 'DELETE' });
                        if (response.ok) {
                            showToast('success', 'Servies Deleted!', 'Your job application has been Deleted successfully.');
                            setTimeout(() => window.reload(), 800);
                        } else {

                            showToast('error', 'Delete Failed!', 'Try again later.');
                        }
                    }
                });
            });
            const btnupload = document.getElementById("label");
            const fileInput = document.getElementById("taskPhotoInput");
            const paragraph = document.getElementById("info");

            fileInput.addEventListener("change", function () {
                if (fileInput.files.length > 0) {
                    btnupload.style.display = "none";
                    document.getElementById("icon").style.display = "none";
                    paragraph.style.color = "#00bfa6";
                    paragraph.innerText = `✔ Image Selected: ${fileInput.files[0].name}`;
                }
            });
            document.addEventListener("DOMContentLoaded", () => {
                const tbody = document.querySelector("#table tbody");
                const rows = Array.from(tbody.querySelectorAll("tr"));
                const pagination = document.getElementById("pagination");
                const rowsPerPageSelect = document.getElementById("rowsPerPage");
                const showingInfo = document.getElementById("showingInfo");

                let currentPage = 1;
                let rowsPerPage = parseInt(rowsPerPageSelect.value);

                function displayPage(page) {
                    const start = (page - 1) * rowsPerPage;
                    const end = start + rowsPerPage;
                    rows.forEach((row, i) => {
                        row.style.display = (i >= start && i < end) ? "" : "none";
                    });
                    currentPage = page;
                    updatePagination();
                    updateShowingInfo();
                }

                function updatePagination() {
                    pagination.innerHTML = "";
                    const pageCount = Math.ceil(rows.length / rowsPerPage);

                    // Prev button
                    const prevLi = document.createElement("li");
                    prevLi.className = `page-item ${currentPage === 1 ? "disabled" : ""}`;
                    const prevA = document.createElement("a");
                    prevA.className = "btn btn-outline-light btn-sm me-2";
                    prevA.innerHTML = `<i class="bi bi-chevron-left"></i>`;
                    prevA.href = "#";
                    prevA.addEventListener("click", (e) => {
                        e.preventDefault();
                        if (currentPage > 1) displayPage(currentPage - 1);
                    });
                    prevLi.appendChild(prevA);
                    pagination.appendChild(prevLi);

                    // Current page indicator
                    const pageLi = document.createElement("li");
                    pageLi.className = "page-item active";
                    const pageA = document.createElement("a");
                    pageA.className = "page-link btn btn-outline-light btn-sm";
                    pageA.textContent = currentPage;
                    pageA.href = "#";
                    pageLi.appendChild(pageA);
                    pagination.appendChild(pageLi);

                    // Next button
                    const nextLi = document.createElement("li");
                    nextLi.className = `page-item ${currentPage === pageCount ? "disabled" : ""}`;
                    const nextA = document.createElement("a");
                    nextA.className = "btn btn-outline-light btn-sm ms-2";
                    nextA.innerHTML = `<i class="bi bi-chevron-right"></i>`;
                    nextA.href = "#";
                    nextA.addEventListener("click", (e) => {
                        e.preventDefault();
                        if (currentPage < pageCount) displayPage(currentPage + 1);
                    });
                    nextLi.appendChild(nextA);
                    pagination.appendChild(nextLi);
                }

                function updateShowingInfo() {
                    const start = (currentPage - 1) * rowsPerPage + 1;
                    const end = Math.min(start + rowsPerPage - 1, rows.length);
                    showingInfo.textContent = `Showing ${start} to ${end} of ${rows.length} results`;
                }

                rowsPerPageSelect.addEventListener("change", () => {
                    rowsPerPage = parseInt(rowsPerPageSelect.value);
                    currentPage = 1;
                    displayPage(currentPage);
                });

                if (rows.length > 0) displayPage(1);
            });
        </script>
</body>

</html>