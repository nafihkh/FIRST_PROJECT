<!DOCTYPE html>
<html lang="en">

<head>
    <title>Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        @font-face {
            font-family: "Inter";
            src: url("/fonts/Inter-Regular.ttf");
        }

        body {
            font-family: "Inter";
            background-color: #0f172a;
            color: white;
        }

        .card {
            background: #1e293b;
            border: none;
            border-radius: 15px;
        }

        .nav-link.active {
            background: #6366f1 !important;
        }

        .inbox {
            width: 100%;
            height: 36px;
            padding-left: 12px;
            padding-right: 12px;
            font-family: Inter;
            font-size: 14px;
            line-height: 22px;
            font-weight: 400;
            background: #323743FF;
            border-radius: 9999px;
            border-width: 1px;
            border-color: #323743FF;
            border-style: solid;
            outline: none;
            color: #bcc1ca;
        }

        .label-set {
            color: #9095a0;
            font-size: 14px;
        }

        #profilePhotoInput {
            display: none;

        }

        .settings-card {
            background: #1e293b;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.4);
        }

        .setting-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .setting-info {
            display: flex;
            align-items: flex-start;
            gap: 12px;
        }

        .setting-info i {
            font-size: 1.4rem;
            margin-top: 4px;
        }

        .setting-info div {
            line-height: 1.2;
        }

        .text-label {
            color: #9095a0;
            font-size: 13px;
        }
        .verification-card {
            background: #1e293b;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .step-indicator {
            background: linear-gradient(135deg, #6366f1, #8b5cf6);
            color: white;
            font-weight: 600;
        }

        .verification-row {
            background: rgba(255, 255, 255, 0.02);
            border: 1px solid rgba(255, 255, 255, 0.08);
            transition: all 0.3s ease;
        }

        .icon-box {
            width: 40px;
            height: 40px;
            background-color: rgb(55 65 81);
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 16px;
            margin-right: 15px;
        }

        .verify-button {
            background: linear-gradient(135deg, #6366f1, #8b5cf6);
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(99, 102, 241, 0.3);
            border: none;
        }
        .verify-button-success {
            background: linear-gradient(135deg, #4ade80, #22c55e, #15803d);

            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(116, 241, 99, 0.3);
            border: none;
        }

        .verify-button:hover {
            background-color: #4338ca;
        }
        .otp-input {
            width: 100%;
            padding: 0.5rem;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            color: #f1f5f9;
            font-size: 1rem;
            transition: all 0.3s ease;
        }
        .otp-input:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
    </style>
</head>

<body>
    <%- include('../partials/header') %>

        <div class="d-flex">
            <%- include('../partials/sidebar') %>
            <%- include('../partials/tosta') %>

                <div class="flex-grow-1 p-4">
                    <h3 class="fw-bold mb-4">Settings</h3>
                    <div class="row g-4">

                        <div class="col-md-6">
                            <div class="card p-3">
                                <h5 class="text-white fw-bold">Profile Settings</h5>
                                <form id="profileForm" action="/user/settings/profile" method="POST"
                                    enctype="multipart/form-data">
                                    <div class="d-flex align-items-center mb-3">
                                        <img src="<%= user.profile_photo || 'https://res.cloudinary.com/dqugwh4su/image/upload/v1761538454/profileeg_tnbpak.jpg' %>"
                                            id="profilePreview" class="rounded-circle me-3" alt="" width="70"
                                            height="70">

                                        <input type="file" id="profilePhotoInput" name="profile_photo" class="d-none">


                                        <label for="profilePhotoInput" class="btn text-white btn-sm ms-2"
                                            style="background-color: #22CCB2;">
                                            Change Photo
                                        </label>
                                    </div>
                                    <label class="label-set fw-semibold mb-1">Username</label>
                                    <input type="text" name="username" value="<%= user.username %>" class="inbox mb-3">
                                    <label class="label-set fw-semibold mb-1">Email</label>
                                    <input type="email" name="email" value="<%= user.email %>" class="inbox mb-3">
                                    <label class="label-set fw-semibold mb-1">Phone</label>
                                    <input type="text" name="phone" value="<%= user.phone %>" class="inbox mb-3">
                                    <button type="submit" class="btn text-white" style="background-color: #22CCB2;">Save
                                        Changes</button>
                                </form>

                            </div>
                        </div>


                        <div class="col-md-6">
                            <div class="card p-3">
                                <h5 class="text-white fw-bold mb-2">Security Settings</h5>
                                <form id="passwordForm" action="/user/settings/password" method="POST">
                                    <label class="label-set fw-semibold mb-1" for="currentPassword">Current
                                        Password</label>
                                    <input type="password" name="currentPassword" class="inbox fw-semibold mb-3"
                                        placeholder="Current Password">

                                    <label class="label-set fw-semibold mb-1" for="newPassword">New Password</label>
                                    <input type="password" name="newPassword" class="inbox fw-semibold mb-3"
                                        placeholder="New Password">

                                    <label class="label-set fw-semibold mb-1" for="confirmPassword">Confirm
                                        Password</label>
                                    <input type="password" name="confirmPassword" class="inbox fw-semibold mb-3"
                                        placeholder="Confirm Password">

                                    <button type="submit" class="btn text-white"
                                        style="font-size: 14px; height: 35px; width: 150px; margin-bottom: 90px; background-color: #22CCB2;">Update
                                        Password</button>
                                </form>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="verification-card">
                                <h5 class="fw-bold mb-3">Two-Step Verification</h5>
                                <p style="color: #bcc1ca; font-size: 14px;">Secure your account with additional
                                    verification steps</p>

                                <!-- EMAIL VERIFICATION -->
                                <h6 class="d-flex align-items-center fw-semibold">
                                    <div style="width: 1.5rem; height: 1.5rem;"
                                        class="step-indicator rounded-circle d-flex align-items-center justify-content-center me-2">
                                        1
                                    </div>Email Verification
                                </h6>

                                <div
                                    class="verification-row d-flex align-items-center justify-content-between p-4 rounded-3">
                                    <div class="d-flex align-items-center flex-grow-1">
                                        <div class="icon-box"><i class="bi bi-envelope text-white"></i></div>
                                        <div class="flex-grow-1">
                                            <p class="mb-0 fw-medium">
                                                <%= user.email %>
                                            </p>
                                            <small style="color: rgb(156, 163, 175);">Primary email address</small>
                                        </div>
                                    </div>
                                    <% if (user.mail_verified) { %>
                                        <button id="emailVerifyBtn"
                                            class="verify-button-success px-4 py-2 text-white fw-semibold rounded-3"
                                            disabled>
                                            Verified
                                        </button>
                                        <% } else { %>
                                            <button id="emailVerifyBtn"
                                                class="verify-button px-4 py-2 text-white fw-semibold rounded-3">
                                                Verify
                                            </button>
                                            <% } %>
                                </div>

                                <!-- Email OTP Input -->
                                <div class="verify-section d-none" id="EmailVerifyBox">
                                    <input type="text" id="emailOtp" class="otp-input mt-3"
                                        placeholder="Enter 6-digit OTP sent to your email" maxlength="6">
                                    <div class="d-flex justify-content-between align-items-center mt-2">
                                        <p style="color: rgb(156, 163, 175); font-size: 14px;" class="otp-info mb-0">
                                            Code expires in <span id="emailTimer"
                                                style="color: rgb(99 102 241);">02:00</span>
                                        </p>
                                        <button id="resendEmailBtn" class="bg-transparent border-0"
                                            style="color: rgb(99 102 241); font-size: 14px;">Resend Code</button>
                                    </div>
                                </div>

                                <!-- PHONE VERIFICATION -->
                                <h6 class="d-flex align-items-center fw-semibold mt-3">
                                    <div style="width: 1.5rem; height: 1.5rem;"
                                        class="step-indicator rounded-circle d-flex align-items-center justify-content-center me-2">
                                        2
                                    </div>Phone Verification
                                </h6>

                                <div
                                    class="verification-row d-flex align-items-center justify-content-between p-4 rounded-3">
                                    <div class="d-flex align-items-center flex-grow-1">
                                        <div class="icon-box"><i class="bi bi-telephone text-white"></i></div>
                                        <div class="flex-grow-1">
                                            <p class="mb-0 fw-medium">
                                                <%= user.phone %>
                                            </p>
                                            <small style="color: rgb(156, 163, 175);">Registered mobile
                                                number</small>
                                        </div>
                                    </div>
                                    <% if (user.phone_verified) { %>
                                        <button id="phoneSendBtn"
                                            class="verify-button-success px-4 py-2 text-white fw-semibold rounded-3"
                                            disabled>
                                            Verified
                                        </button>
                                        <% } else { %>
                                            <button id="phoneVerifyBtn"
                                                class="verify-button px-4 py-2 text-white fw-semibold rounded-3">
                                                Verify
                                            </button>
                                            <% } %>
                                </div>

                                <!-- Phone OTP Input -->
                                <div class="verify-section d-none" id="phoneVerifyBox">
                                    <input type="text" id="phoneOtp" class="otp-input mt-3"
                                        placeholder="Enter 6-digit SMS Code" maxlength="6">
                                    <div class="d-flex justify-content-between align-items-center mt-2">
                                        <p style="color: rgb(156, 163, 175); font-size: 14px;" class="otp-info mb-0">
                                            Code expires in <span id="phoneTimer"
                                                style="color: rgb(99 102 241);">02:00</span>
                                        </p>
                                        <button id="resendPhoneBtn" class="bg-transparent border-0"
                                            style="color: rgb(99 102 241); font-size: 14px;">Resend Code</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- RIGHT CARD -->
                        <div class="col-md-6">
                            <div class="settings-card text-center h-100">
                                <h4 class="fw-bold">Become a Helper</h4>
                                <p class="text-label mt-3">
                                    Want to help others in your neighborhood? Apply to become a verified helper and
                                    start earning by completing tasks.
                                </p>
                                <a href="/user/workerapproval" style="background-color: #22CCB2;"
                                    class="btn  px-4 py-2 mt-3 text-white fw-bold">Request Helper Role</a>
                            </div>
                        </div>
                    </div>
                </div>
              
                
        </div>
        <script>
            const input = document.getElementById('profilePhotoInput');
            const preview = document.getElementById('profilePreview');

            input.addEventListener('change', (e) => {
                const file = e.target.files[0];
                if (file) {
                    preview.src = URL.createObjectURL(file);
                }
            });

            document.getElementById("passwordForm").addEventListener("submit", async function (e) {
                e.preventDefault();

                const formData = {
                    currentPassword: this.currentPassword.value,
                    newPassword: this.newPassword.value,
                    confirmPassword: this.confirmPassword.value
                };

                try {
                    const response = await fetch("/user/settings/password", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify(formData)
                    });

                    const data = await response.json();

                    showToast(data.success ? 'success' : 'warning', data.success ? 'Pssword Updated successfully!' : 'Failed Password Update!', data.success ? `${data.message}` : `${data.error}`);
                    if (data.success) {
                        setTimeout(() => location.reload(), 1000);
                    }
                } catch (err) {
                    console.error(err);
                }
            });
            const profileForm = document.getElementById("profileForm");

            profileForm.addEventListener("submit", async function (e) {
                e.preventDefault();

                const formData = new FormData(this);

                try {
                    const response = await fetch("/user/settings/profile", {
                        method: "POST",
                        body: formData
                    });

                    const data = await response.json();


                    showToast(data.success ? 'success' : 'warning', data.success ? 'Profile Updated successfully!' : 'Failed Profile Update!', data.success ? `${data.message}` : `${data.error}`);

                    if (data.success) {
                        setTimeout(() => location.reload(), 1000);
                    }

                } catch (err) {
                    console.error(err);
                }
            });
            document.addEventListener("DOMContentLoaded", () => {
            const emailSendBtn = document.getElementById("emailVerifyBtn");
                        const emailInputSection = document.getElementById("EmailVerifyBox");
                        const emailOtpInput = document.getElementById("emailOtp");
                        const resendEmailBtn = document.getElementById("resendEmailBtn");
                        const emailTimer = document.getElementById("emailTimer");
                        let emailCountdown;

                        emailSendBtn.addEventListener("click", async () => {
                            try {
                                const res = await fetch("/user/email/send", { method: "POST" });
                                const data = await res.json();
                                if (data.success) {
                                    emailInputSection.classList.remove("d-none");
                                    startEmailTimer(120);
                                   
                                     showToast('info', 'Verification code sent to your email.', `Please Check Your Email`)
                                } else {
                                    showToast('warning', 'Something went wrong', 'Please Check Youer Email Address')
                                }
                            } catch (err) {
                                console.error(err);
                                showToast('error', 'Server Error', `Something went wrong`)
                            }
                        });

                        emailOtpInput.addEventListener("keypress", async (e) => {
                            if (e.key === "Enter") {
                                const otp = emailOtpInput.value.trim();
                                if (!otp) return;

                                try {
                                    const res = await fetch("/user/email/verify", {
                                        method: "POST",
                                        headers: { "Content-Type": "application/json" },
                                        body: JSON.stringify({ otp }),
                                    });
                                    const data = await res.json();

                                    if (data.success) {
                                        clearInterval(emailCountdown);
                                         showToast('success', 'Verified successfully!', `${data.message}`)
                                        emailInputSection.classList.add("d-none");

                                        // Update the Verify button text to show success
                                        const emailRowBtn = document.getElementById("emailVerifyBtn");
                                        emailRowBtn.textContent = "Verified";
                                        emailRowBtn.disabled = true;
                                        emailRowBtn.classList.remove("verify-button");
                                        emailRowBtn.classList.add("btn-success");

                                        // Optionally, show a checkmark next to the email
                                        const emailVerifiedIcon = document.createElement("i");
                                        emailVerifiedIcon.className = "bi bi-check-circle-fill text-success ms-2";
                                        emailRowBtn.parentElement.querySelector(".fw-medium").appendChild(emailVerifiedIcon);
                                    }
                                    else {
                                        showToast('warning', 'Incorrect Otp', `${data.message}`)
                                    }
                                } catch (err) {
                                    console.error(err);
                                    showToast('error', 'Failed to verify OTP', `Something went wrong`)
                                }
                            }
                        });

                        resendEmailBtn.addEventListener("click", () => emailSendBtn.click());

                        function startEmailTimer(seconds) {
                            clearInterval(emailCountdown);
                            let remaining = seconds;
                            emailCountdown = setInterval(() => {
                                const mins = String(Math.floor(remaining / 60)).padStart(2, "0");
                                const secs = String(remaining % 60).padStart(2, "0");
                                emailTimer.textContent = `${mins}:${secs}`;
                                if (remaining-- <= 0) clearInterval(emailCountdown);
                            }, 1000);
                        }

                        // ===========================
                        // PHONE OTP VERIFICATION
                        // ===========================
                        const phoneSendBtn = document.getElementById("phoneSendBtn");
                        const phoneInputSection = document.getElementById("phoneVerifyBox");
                        const phoneOtpInput = document.getElementById("phoneOtp");
                        const resendPhoneBtn = document.getElementById("resendPhoneBtn");
                        const phoneTimer = document.getElementById("phoneTimer");
                        let phoneCountdown;

                        phoneSendBtn.addEventListener("click", async () => {
                            try {
                                const res = await fetch("/user/phone/send", { method: "POST" });
                                const data = await res.json();
                                if (data.success) {
                                    phoneInputSection.classList.remove("d-none");
                                    startPhoneTimer(120);
                                     showToast('info', 'Verification code sent to your phone.', `Please Check Your Messages`)
                                } else {
                                    showToast('warning', 'Something went wrong', 'Please Check Youer Phone Number')
                                }
                            } catch (err) {
                                console.error(err);
                                showToast('error', 'Failed to send SMS', `Something went wrong`)
                            }
                        });

                        phoneOtpInput.addEventListener("keypress", async (e) => {
                            if (e.key === "Enter") {
                                const otp = phoneOtpInput.value.trim();
                                if (!otp) return;
                                try {
                                    const res = await fetch("/user/phone/verify", {
                                        method: "POST",
                                        headers: { "Content-Type": "application/json" },
                                        body: JSON.stringify({ otp }),
                                    });
                                    const data = await res.json();
                                    
                                    if (data.success) {
                                        clearInterval(phoneCountdown);
                                         showToast('success', 'Verified successfully!', `${data.message}`)
                                        phoneInputSection.classList.add("d-none");

                                        // Update the Verify button text to show success
                                        const phoneRowBtn = document.getElementById("phoneVerifyBtn");
                                        phoneRowBtn.textContent = "Verified";
                                        phoneRowBtn.disabled = true;
                                        phoneRowBtn.classList.remove("verify-button");
                                        phoneRowBtn.classList.add("btn-success");

                                        // Optionally, show a checkmark next to the email
                                        const phoneVerifiedIcon = document.createElement("i");
                                        phoneVerifiedIcon.className = "bi bi-check-circle-fill text-success ms-2";
                                        phoneRowBtn.parentElement.querySelector(".fw-medium").appendChild(phoneVerifiedIcon);
                                        // ✅ Here you can add code to update UI: mark phone as verified
                                    }
                                    else {
                                        showToast('warning', 'Incorrect Otp!', `${data.message}`)
                                    }
                                } catch (err) {
                                    console.error(err);
                                    showToast('error', 'Failed to verify OTP', `Something went wrong`)
                                }
                            }
                        });


                        resendPhoneBtn.addEventListener("click", () => phoneSendBtn.click());

                        function startPhoneTimer(seconds) {
                            clearInterval(phoneCountdown);
                            let remaining = seconds;
                            phoneCountdown = setInterval(() => {
                                const mins = String(Math.floor(remaining / 60)).padStart(2, "0");
                                const secs = String(remaining % 60).padStart(2, "0");
                                phoneTimer.textContent = `${mins}:${secs}`;
                                if (remaining-- <= 0) clearInterval(phoneCountdown);
                            }, 1000);
                        }
                         
                    });
                    
        </script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

</body>


</html>