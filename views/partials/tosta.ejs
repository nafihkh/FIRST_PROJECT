<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JobSeek - Toast Notifications</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #3b82f6;
            --primary-dark: #1e40af;
            --primary-darker: #1e3a8a;
            --secondary: #0ea5e9;
            --accent: #06b6d4;
            --dark-bg: #0f172a;
            --dark-card: #1e293b;
            --dark-card-hover: #334155;
            --text-light: #f1f5f9;
            --text-muted: #94a3b8;
            --success: #10b981;
            --warning: #f59e0b;
            --error: #ef4444;
            --gradient: linear-gradient(135deg, var(--primary), var(--secondary));
            --gradient-dark: linear-gradient(135deg, var(--primary-dark), var(--primary-darker));
        }
        /* Toast Container */
        .toast-container {
            position: fixed;
            color: var(--text-light);
            top: 100px;
            right: 20px;
            z-index: 9999;
            display: flex;
            flex-direction: column;
            gap: 15px;
            max-width: 400px;
        }

        /* Toast Styles */
        .toast {
            background: var(--dark-card);
            border-radius: 12px;
            padding: 16px 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            border-left: 5px solid;
            display: flex;
            align-items: center;
            gap: 15px;
            transform: translateX(400px) scale(0.8);
            opacity: 0;
            transition: all 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
            max-width: 100%;
            border: 1px solid rgba(255, 255, 255, 0.05);
            position: relative;
            overflow: hidden;
        }

        .toast.show {
            transform: translateX(0) scale(1);
            opacity: 1;
        }

        .toast.hide {
            transform: translateX(400px) scale(0.8);
            opacity: 0;
        }

        .toast.success {
            border-left-color: var(--success);
            animation: pulseSuccess 2s infinite;
        }

        .toast.error {
            border-left-color: var(--error);
            animation: shake 0.5s ease-in-out;
        }

        .toast.warning {
            border-left-color: var(--warning);
            animation: pulseWarning 2s infinite;
        }

        .toast.info {
            border-left-color: var(--primary);
            animation: pulseInfo 2s infinite;
        }

        .toast-icon {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            flex-shrink: 0;
            animation: iconBounce 0.6s ease;
        }

        .toast.success .toast-icon {
            background: rgba(16, 185, 129, 0.2);
            color: var(--success);
        }

        .toast.error .toast-icon {
            background: rgba(239, 68, 68, 0.2);
            color: var(--error);
        }

        .toast.warning .toast-icon {
            background: rgba(245, 158, 11, 0.2);
            color: var(--warning);
        }

        .toast.info .toast-icon {
            background: rgba(59, 130, 246, 0.2);
            color: var(--primary);
        }

        .toast-content {
            flex: 1;
            animation: slideInContent 0.5s ease-out 0.2s both;
        }

        .toast-title {
            font-weight: 600;
            margin-bottom: 4px;
            font-size: 16px;
        }

        .toast-message {
            color: var(--text-muted);
            font-size: 14px;
            line-height: 1.4;
        }

        .toast-close {
            background: none;
            border: none;
            color: var(--text-muted);
            cursor: pointer;
            font-size: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            flex-shrink: 0;
            width: 24px;
            height: 24px;
            border-radius: 50%;
        }

        .toast-close:hover {
            color: var(--text-light);
            background: rgba(255, 255, 255, 0.1);
            transform: rotate(90deg);
        }

        .progress-bar {
            position: absolute;
            bottom: 0;
            left: 0;
            height: 3px;
            width: 100%;
            border-radius: 0 0 12px 12px;
            overflow: hidden;
        }

        .progress-bar::before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            height: 100%;
            width: 100%;
            transform: scaleX(1);
            transform-origin: left;
            animation: progressShrink 5s linear forwards;
        }

        .toast.success .progress-bar::before {
            background: var(--success);
        }

        .toast.error .progress-bar::before {
            background: var(--error);
        }

        .toast.warning .progress-bar::before {
            background: var(--warning);
        }

        .toast.info .progress-bar::before {
            background: var(--primary);
        }

        /* Animations */
        @keyframes progressShrink {
            0% {
                transform: scaleX(1);
            }
            100% {
                transform: scaleX(0);
            }
        }

        @keyframes iconBounce {
            0%, 20%, 53%, 80%, 100% {
                transform: scale(1);
            }
            40%, 43% {
                transform: scale(1.3);
            }
            70% {
                transform: scale(1.1);
            }
        }

        @keyframes slideInContent {
            0% {
                opacity: 0;
                transform: translateX(-20px);
            }
            100% {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @keyframes pulseSuccess {
            0%, 100% {
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            }
            50% {
                box-shadow: 0 10px 30px rgba(16, 185, 129, 0.3);
            }
        }

        @keyframes pulseWarning {
            0%, 100% {
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            }
            50% {
                box-shadow: 0 10px 30px rgba(245, 158, 11, 0.3);
            }
        }

        @keyframes pulseInfo {
            0%, 100% {
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            }
            50% {
                box-shadow: 0 10px 30px rgba(59, 130, 246, 0.3);
            }
        }

        @keyframes shake {
            0%, 100% {
                transform: translateX(0) scale(1);
            }
            10%, 30%, 50%, 70%, 90% {
                transform: translateX(-5px) scale(1);
            }
            20%, 40%, 60%, 80% {
                transform: translateX(5px) scale(1);
            }
        }

        @keyframes fadeInUp {
            0% {
                opacity: 0;
                transform: translateY(20px);
            }
            100% {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive */
        @media (max-width: 768px) {
            .toast-container {
                right: 10px;
                left: 10px;
                max-width: none;
            }
            
            .controls {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Toast Container -->
    <div class="toast-container" id="toastContainer"></div>

    <!-- Demo Content -->
   

    <script>
        // Toast function
        function showToast(type, title, message, duration = 5000) {
            const toastContainer = document.getElementById('toastContainer');
            
            // Create toast element
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            
            // Set toast content
            toast.innerHTML = `
                <div class="toast-icon">
                    <i class="bi ${getToastIcon(type)}"></i>
                </div>
                <div class="toast-content">
                    <div class="toast-title">${title}</div>
                    <div class="toast-message">${message}</div>
                </div>
                <button class="toast-close" onclick="removeToast(this.parentElement)">
                    <i class="bi bi-x"></i>
                </button>
                <div class="progress-bar"></div>
            `;
            
            // Add toast to container
            toastContainer.appendChild(toast);
            
            // Show toast with animation
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            
            // Auto remove toast after duration
            const toastId = setTimeout(() => {
                removeToast(toast);
            }, duration);
            
            // Store timeout ID for manual removal
            toast.dataset.timeoutId = toastId;
        }
        
        // Get appropriate icon for toast type
        function getToastIcon(type) {
            switch(type) {
                case 'success': return 'bi-check-circle';
                case 'error': return 'bi-x-circle';
                case 'warning': return 'bi-exclamation-triangle';
                case 'info': return 'bi-info-circle';
                default: return 'bi-info-circle';
            }
        }
        
        // Remove toast with animation
        function removeToast(toast) {
            if (toast.dataset.timeoutId) {
                clearTimeout(parseInt(toast.dataset.timeoutId));
            }
            
            toast.classList.remove('show');
            toast.classList.add('hide');
            
            // Remove from DOM after animation completes
            setTimeout(() => {
                if (toast.parentElement) {
                    toast.parentElement.removeChild(toast);
                }
            }, 500);
        }
        

    </script>
</body>
</html>