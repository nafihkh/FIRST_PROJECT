<!DOCTYPE html>
<html lang="en">

<head>
    <title>Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@5/dark.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        @font-face {
            font-family: "Inter";
            src: url("/fonts/Inter-Regular.ttf");
        }

        body {
            font-family: "Inter";
            background-color: #0f172a;
            color: white;
        }

        .card {
            background: #1e293b;
            border: none;
            border-radius: 15px;
        }

        .nav-link.active {
            background: #6366f1 !important;
        }

        .custom-table-wrapper {
            background-color: #171c26;
            color: #bdc1ca;
            border-radius: 19px;
            overflow: hidden;
            font-size: 14px;
        }

        .custom-table {
            background: transparent !important;
            margin-bottom: 0;
            border-collapse: separate;
            border-spacing: 0;
        }

        .custom-table thead th {
            color: #bdc1ca;
            background: #262a33;
            border-bottom: 1px solid #2f343d;
            font-weight: 600;
            padding: 16px 18px;
        }

        .custom-table tbody tr {
            background: transparent;
            border-bottom: 1px solid #2f343d;
        }

        .custom-table tbody tr:last-child {
            border-bottom: none;
        }

        .custom-table tbody td {
            color: #f3f4f6;

            background: transparent !important;
            vertical-align: middle;
            padding: 16px 18px;
        }

        .custom-table tbody tr:hover td {
            background: rgba(255, 255, 255, 0.02);
        }

        .inbox {
            width: 139px;
            height: 36px;
            padding-left: 12px;
            padding-right: 34px;
            font-family: Inter;
            font-size: 14px;
            line-height: 22px;
            font-weight: 400;
            background: #1f2937ff;
            border-radius: 10px;
            border-width: 1px;
            border-color: #1c222bff;
            border-style: solid;
            outline: none;
        }

        input[type="date"]::-webkit-calendar-picker-indicator {
            opacity: 0;
            cursor: pointer;
            position: relative;
            z-index: 1;
        }

        input[type="date"]::-moz-calendar-picker-indicator {
            opacity: 0;
            cursor: pointer;
        }

        input[type="date"] {
            position: relative;
        }

        input[type="date"]::after {
            font-style: normal;
            font-variant: normal;
            text-rendering: auto;
            display: inline-block;

            color: #fff;
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            pointer-events: none;
        }

        .date-wrapper {
            position: relative;
            display: inline-block;
        }

        .date-wrapper input[type="date"] {
            padding-right: 40px;
        }

        .date-wrapper .calendar-icon {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: #fff;
            cursor: pointer;
        }

        input[type="date"]:focus {
            outline: none;
            box-shadow: none;
            border-color: transparent;
        }

        input[type="date"]:focus {
            border: 1px solid rgba(255, 255, 255, 0.5);
            background-color: rgba(255, 255, 255, 0.05);
        }

        .search-wrapper {
            position: relative;
            display: inline-block;
        }

        .search-icon {
            position: absolute;
            top: 8px;
            left: 9px;
            width: 20px;
            height: 20px;
        }

        #searchFilter {
            padding-left: 34px;
            width: 100%;
            color: #bdc1ca;
        }

        #searchFilter::placeholder {
            color: #f3f4f6;
        }

        .icon-box {
            width: 20px;
            height: 20px;
        }

        .Active {
            background: #10b98133 !important;
            color: #10b981 !important;
            font-size: 12px !important;
            border: none !important;
        }

        .Inactive {
            background: #6c757d33 !important;
            color: #bdbdbd !important;
            font-size: 12px !important;
            border: none !important;
        }
    </style>
</head>

<body>
    <%- include('../partials/header') %>

        <div class="d-flex">
            <%- include('../partials/sidebar') %>

                <div class="p-4 w-100" style="
          background: #0f172a;
          min-height: 100vh;
          font-family: 'Inter', sans-serif;
          color: white;
        ">
                    <h3 class="fw-bold mb-4">User Management</h3>

                    <div style="background-color: #171c26" class="d-flex gap-3 mb-4 p-4 rounded-3">
                        <div class="d-flex align-items-center">
                            <label style="color: #bdc1ca; font-size: 14px" for="">Status:</label>
                            <select id="statusFilter" class="form-select inbox text-white border-0 ms-1"
                                style="width: 150px">
                                <option value="all">All Status</option>
                                <option value="Active">Active</option>
                                <option value="Inactive">Inactive</option>
                            </select>
                        </div>
                        <div class="d-flex align-items-center">
                            <label style="color: #bdc1ca; font-size: 14px" for="">Satus:</label>
                            <select id="statusFilter2" class="form-select inbox text-white border-0 ms-1"
                                style="width: 150px">
                                <option value="all">All Status</option>
                                <option value="Blicked">Blocked</option>
                                <option value="Unbloked">Unbloked</option>
                            </select>
                        </div>

                        <div class="search-wrapper">
                            <img class="search-icon" src="/images/search.svg" alt="" />
                            <input type="search" id="searchFilter" class="inbox" placeholder="Search..." />
                        </div>
                    </div>

                    <div class="table-responsive custom-table-wrapper">
                        <table id="table" class="table table-borderless align-middle custom-table">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Users</th>
                                    <th class="text-center">Status</th>
                                    <th>Last Active</th>
                                    <th class="text-center">Action</th>
                                </tr>
                            </thead>
                            <tbody id="tbody">
                                <tr>
                                    <td>#T2845</td>
                                    <td>
                                        <img src="/images/profileeg.jpg" class="rounded-circle me-2" width="30"
                                            height="30" />
                                        Alex Rodriguez
                                    </td>
                                    <td >
                                        <button class="btn fw-semibold Active rounded-5">
                                            Active
                                        </button>
                                    </td>
                                    <td>2 hours ago</td>
                                    <td class="d-flex justify-content-between align-items-center">
                                        <span class="btn bg-danger rounded-3 text-white fw-bold"
                                            style="font-size: 12px">Block</span>
                                        <a href="#" class="text-info me-2"><img class="icon-box" src="/images/edit.svg"
                                                alt="" /></a>
                                        <a href="#" class="text-danger"><img class="icon-box" src="/images/delete.svg"
                                                alt="" /></a>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
        </div>
</body>
<script>
    document.addEventListener("DOMContentLoaded", () => {
    let allUsers = [];
    async function loadUser() {
        try {
            const res = await fetch("/admin/users/list");
            if (!res.ok) throw new Error("Failed to fetch users");
            allUsers = await res.json();
             applyFilters();
        } catch (err) {
            console.error("Error loading users:", err.message);
        }
    }

    function renderUser(list) {
        const tbody = document.getElementById("tbody");
        tbody.innerHTML = "";

        list.forEach((user) => {
            const row = document.createElement("tr");
            row.id = `user-${user._id}`;
            row.innerHTML = `
                <td>#${user._id.slice(-5)}</td>
                <td>
                    <img src="${user.profile_photo || "/images/profileeg.jpg"}"
                        class="rounded-circle me-2" width="30" height="30">
                    ${user.username}
                </td>
                <td class="text-center">
                    <span class="btn fw-semibold rounded-5 ${user.status}">
                        ${user.status}
                    </span>
                </td>
                <td class="last-active">${formatTimeAgo(user.last_active)}</td>
                
                <td class="d-flex justify-content-between align-items-center">
                    <button onclick="toggleBlock('${user._id}')" 
                        class="btn rounded-3 text-white fw-bold ${user.accessibility ? "bg-danger" : "bg-success"}" 
                        style="font-size: 12px">
                        ${user.accessibility ? "Block" : "Unblock"}
                    </button>
                    <a onclick="deleteUser('${user._id}')" href="#" class="text-danger">
                        <img class="icon-box" src="/images/delete.svg" alt="" />
                    </a>
                </td>
            `;
            tbody.appendChild(row);
        });
    }
    
    function applyFilters() {
        const statusValue = document.getElementById("statusFilter").value; 
        const blockValue = document.getElementById("statusFilter2").value; 
        const searchValue = document.getElementById("searchFilter").value.toLowerCase();

        const filtered = allUsers.filter(user => {
            // Status filter
            let statusMatch = statusValue === "all" ||
                  (statusValue === "Active" && user.status === "Active") ||
                  (statusValue === "Inactive" && user.status === "Inactive");

            let blockMatch = blockValue === "all" || 
                             (blockValue === "Blicked" && user.accessibility) || 
                             (blockValue === "Unbloked" && !user.accessibility);

            let searchMatch = !searchValue || (user.username || "").toLowerCase().includes(searchValue) || (user._id || "").toLowerCase().includes(searchValue);

            return statusMatch && blockMatch && searchMatch;
        });

        renderUser(filtered);
    }
    document.getElementById("statusFilter").addEventListener("change", applyFilters);
    document.getElementById("statusFilter2").addEventListener("change", applyFilters);
    document.getElementById("searchFilter").addEventListener("input", applyFilters);

    
    window.toggleBlock = async function(userId) {
        try {
            const res = await fetch(`/admin/users/${userId}/block`, {
                method: "PATCH",
                credentials: "include", 
                headers: {
                    "Content-Type": "application/json"
                }
            });

            const data = await res.json();

            if (!res.ok) throw new Error(data.error || "Failed to update status");

           
            const row = document.getElementById(`user-${userId}`);
            const btn = row.querySelector("button");
            btn.textContent = data.accessibility ? "Block" : "Unblock";
            btn.className = `btn rounded-3 text-white fw-bold ${data.accessibility ? "bg-danger" : "bg-success"}`;
        } catch (err) {
            console.error("Toggle Block Error:", err);
            alert("Error updating user status: " + err.message);
        }
    };

 
    window.deleteUser = async function(userId) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            background: "#1e293b",   
            color: "#f3f4f6",        
            confirmButtonText: "Yes, delete it!"
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const res = await fetch(`/admin/users/${userId}`, { method: "DELETE" });
                    const data = await res.json();

                    if (!res.ok) throw new Error(data.error || "Failed to delete user");

                
                    document.getElementById(`user-${userId}`).remove();

                   
                    Swal.fire({
                        title: "Deleted!",
                        text: "User has been deleted.",
                        icon: "success",
                        background: "#1e293b",
                        color: "#f3f4f6",
                        confirmButtonColor: "#6366f1"
                    });

                } catch (err) {
                    console.error("Delete Error:", err);

                    Swal.fire({
                        title: "Error!",
                        text: "Failed to delete user: " + err.message,
                        icon: "error",
                        background: "#1e293b",
                        color: "#f3f4f6",
                        confirmButtonColor: "#6366f1"
                    });
                }
            }
        });
    };

    function formatTimeAgo(dateString) {
        const date = new Date(dateString);
        const now = new Date();
        const diffMs = now - date;

        const seconds = Math.floor(diffMs / 1000);
        const minutes = Math.floor(seconds / 60);
        const hours = Math.floor(minutes / 60);
        const days = Math.floor(hours / 24);
        const weeks = Math.floor(days / 7);
        const months = Math.floor(days / 30);

        if (minutes < 1) return "just now";
        if (minutes < 60) return `${minutes} mins ago`;
        if (hours < 24) return `${hours} hours ago`;
        if (days < 7) return `${days} days ago`;
        if (weeks < 4) return `${weeks} weeks ago`;
        return `${months} months ago`;
    }

    loadUser();
});
</script>


</html>