<!DOCTYPE html>
<html lang="en">

<head>
    <title>Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* Your existing CSS here unchanged */
        @font-face {
            font-family: "Inter";
            src: url("/fonts/Inter-Regular.ttf");
        }

        body {
            font-family: "Inter";
            background-color: #0f172a;
            color: white;
        }

        .card {
            background: #1e293b;
            border: none;
            border-radius: 15px;
        }

        .nav-link.active {
            background: #6366f1 !important;
        }

        .inbox {
            width: 139px;
            height: 36px;
            padding-left: 12px;
            padding-right: 34px;
            font-family: Inter;
            font-size: 14px;
            line-height: 22px;
            font-weight: 400;
            background: #1f2937ff;
            border-radius: 10px;
            border-width: 1px;
            border-color: #1c222bff;
            border-style: solid;
            outline: none;
            color: #BDC1CA;
        }

        input[type="date"]::-webkit-calendar-picker-indicator {
            opacity: 0;
            cursor: pointer;
            position: relative;
            z-index: 1;
        }

        input[type="date"]::-moz-calendar-picker-indicator {
            opacity: 0;
            cursor: pointer;
        }

        input[type="date"] {
            position: relative;
        }

        input[type="date"]::after {
            font-style: normal;
            font-variant: normal;
            text-rendering: auto;
            display: inline-block;
            color: #fff;
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            pointer-events: none;
        }

        .date-wrapper {
            position: relative;
            display: inline-block;
        }

        .date-wrapper input[type="date"] {
            padding-right: 40px;
        }

        .date-wrapper .calendar-icon {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: #fff;
            cursor: pointer;
        }

        input[type="date"]:focus {
            border: 1px solid rgba(255, 255, 255, 0.5);
            background-color: rgba(255, 255, 255, 0.05);
        }

        .search-wrapper {
            position: relative;
            display: inline-block;
        }

        .search-icon {
            position: absolute;
            top: 8px;
            left: 9px;
            width: 20px;
            height: 20px;
        }

        #searchFilter {
            padding-left: 34px;
            width: 100%;
        }

        #searchFilter::placeholder {
            color: #f3f4f6;
        }

        .approved {
            background: #10B98133;
            color: #10b981;
            font-size: 12px;
        }

        .pending {
            background: #FACC1533;
            color: #facc15;
            font-size: 12px;
        }

        .rejected {
            background: #F4403433;
            color: #f44034;
            font-size: 12px;
        }

        .icon-box {
            width: 20px;
            height: 36px;
        }

        .input-box {
            background-color: #0f172a;
            width: 100%;
            height: 40px;
            padding-left: 12px;
            padding-right: 12px;
            font-family: 'Inter';
            font-size: 14px;
            line-height: 22px;
            font-weight: 400;
            border-radius: 10px;
            border-width: 1px;
            border-color: rgb(59, 59, 59);
            border-style: solid;
            outline: none;
            color: #BDC1CA;
        }

        #pieChart,
        #barChart2 {
            height: 268px !important;
            max-height: 268px;
        }
    </style>
</head>

<body>
    <%- include('../partials/header') %>

    <div class="d-flex">
        <%- include('../partials/sidebar') %>

        <div class="p-4 w-100" style="background: #0f172a; min-height: 100vh; font-family: 'Inter', sans-serif; color: white;">
            <h3 class="fw-bold mb-4">Problem Management</h3>

            <div style="background-color: #171c26" class="d-flex gap-3 mb-4 p-4 rounded-3">
                <div class="d-flex align-items-center">
                    <label style="color: #bdc1ca; font-size: 14px" for="">Status:</label>
                    <select id="statusFilter" class="form-select inbox text-white border-0 ms-1" style="width: 150px">
                        <option value="all">All Status</option>
                        <option value="Approved">Approved</option>
                        <option value="Pending">Pending</option>
                        <option value="Rejected">Rejected</option>
                    </select>
                </div>
                <div class="d-flex align-items-center">
                    <label style="color: #bdc1ca; font-size: 14px" for="">Date:</label>
                    <div class="date-wrapper">
                        <input type="date" id="dateFilter" name="date" class="form-control text-white border-0 inbox ms-1 w-auto" />
                        <span class="calendar-icon"><i class="fa-solid fa-calendar-days"></i></span>
                    </div>
                </div>

                <div class="search-wrapper">
                    <img class="search-icon" src="https://res.cloudinary.com/dqugwh4su/image/upload/v1761538455/search_lxfgxx.svg" alt="" />
                    <input type="search" id="searchFilter" class="inbox" placeholder="Search..." />
                </div>
            </div>
            <div class="row g-4">
                <div class="col-md-6">
                    <div class="card p-3">
                        <h5 class="text-white fw-bold">User Growth</h5>
                        <canvas id="lineChart"></canvas>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card p-3">
                        <h5 class="text-white fw-bold mb-2">Problem Resolution Time</h5>
                        <canvas id="barChart"></canvas>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card p-3">
                        <h5 class="text-white fw-bold mb-2">Department Performance</h5>
                        <canvas id="pieChart" class=""></canvas>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card p-3">
                        <h5 class="text-white fw-bold">Worker Ratings Distribution</h5>
                        <canvas id="barChart2"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
<script>
    document.querySelector(".calendar-icon").addEventListener("click", () => {
        document.getElementById("dateFilter").showPicker();
    });

    // Utility: Convert date strings to day names (Sun, Mon, ...)
    function getDayLabels(dates) {
        const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
        return dates.map(dateStr => days[new Date(dateStr).getDay()]);
    }

    async function fetchChartData(url) {
        const response = await fetch(url);
        if (!response.ok) throw new Error('Network response was not ok');
        return response.json();
    }

    async function loadUserGrowth() {
        try {
            const data = await fetchChartData('/admin/user-growth');
            const labels = getDayLabels(data.map(d => d._id));
            const values = data.map(d => d.count);

            new Chart(document.getElementById("lineChart"), {
                type: "line",
                data: {
                    labels,
                    datasets: [{
                        label: "Users",
                        data: values,
                        borderColor: "#38bdf8",
                        fill: true,
                        backgroundColor: "rgba(56, 189, 248, 0.2)",
                    }]
                },
                options: { plugins: { legend: { display: false } } },
            });
        } catch (error) {
            console.error("Error loading user growth data:", error);
        }
    }

    async function loadTasksCompleted() {
        try {
            const data = await fetchChartData('/admin/tasks-completed');
            const labels = getDayLabels(data.map(d => d._id));
            const values = data.map(d => d.count);

            new Chart(document.getElementById("barChart"), {
                type: "bar",
                data: {
                    labels,
                    datasets: [{
                        data: values,
                        backgroundColor: "#6366f1"
                    }]
                },
                options: { plugins: { legend: { display: false } } },
            });
        } catch (error) {
            console.error("Error loading tasks completed data:", error);
        }
    }
      const pieCtx = document.getElementById("pieChart");
            const pieChart = new Chart(pieCtx, {
                type: "pie",
                data: {
                    labels: ["Admins", "Workers", "Users"],
                    datasets: [
                        {
                            data: [],
                            backgroundColor: ["#f43f5e", "#f97316", "#6366f1", "#38bdf8", "#22c55e"]
                        },
                    ],
                },
                options: { plugins: { legend: { display: false } } },

            });

             fetch("/admin/metrics")
                .then(res => res.json())
                .then(data => {
                    pieChart.data.datasets[0].data = [
                        data.totalAdmins,
                        data.totalWorkers,
                        data.totalUsers
                    ];
                    pieChart.update();
                })
                .catch(err => console.error("Metrics fetch error:", err));
       
  
      

    async function loadUserRatings() {
        try {
            const data = await fetchChartData('/admin/user-rating');
            const labels = getDayLabels(data.map(d => d._id));
            const values = data.map(d => d.avgRating);

            new Chart(document.getElementById("barChart2"), {
                type: "bar",
                data: {
                    labels,
                    datasets: [{
                        data: values,
                        backgroundColor: "#10b981"
                    }]
                },
                options: { plugins: { legend: { display: false } } },
            });
        } catch (error) {
            console.error("Error loading user ratings data:", error);
        }
    }

    window.addEventListener('DOMContentLoaded', () => {
        loadUserGrowth();
        loadTasksCompleted();
        loadUserRatings();
    });
    
</script>

</html>
